@startuml
Interface Manager
Interface StorageController<T> {
    + T Query()
    + void Add()
    + void Remove()
    + void Update()
}

struct Author {
    + AuthorUUID identifier
    + String name
}
Author "1" --- "1" AuthorUUID : contains

struct Publisher {
    + OrganizationUUID identifier
    + String name
}
Publisher "1" --- "1" OrganizationUUID : contains

struct PublishRev {
    + date date
    + int rev
    + int print
}

struct Book {
    + BookUUID identifier
    + String title
    + List<Image> covers
    + List<Author> authors
    + List<Author> translators
    + Publisher publisher
    + int page
    + List<PublishRev> publishRevs
    + String isbn
}
Book "1" o-- "1" BookUUID : contains
Book "1" o-- "N" Image : contains
Book "1" o-- "N" Author : contains
Book "1" o-- "1" Publisher : contains
Book "1" o-- "N" PublishRev : contains

' BookDatabaseSubSystem

class BookDatabaseManager implements Manager {}

class BookDatabaseStorageController implements StorageController {}
BookDatabaseStorageController --- Book : use

class BookDatabaseSubSystem {
    + {static} BookDatabaseManager bookDatabaseManager
    + {static} BookDatabaseStorageController bookDatabaseStorageController<T>
}

BookDatabaseSubSystem "1" --- "1" BookDatabaseManager : contains
BookDatabaseSubSystem "1" --- "1" BookDatabaseStorageController : contains

@enduml
