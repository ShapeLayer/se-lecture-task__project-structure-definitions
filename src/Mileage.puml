@startuml
' Commons
Interface Manager
Interface StorageController<T> {
    + T Query()
    + void Add()
    + void Remove()
    + void Update()
}

enum ItemType {
    Real
    Virtual
}

class ItemContent {}
class ItemMetadata {}
class RealItemMetadata extends ItemMetadata {}
class VirtItemMetadata extends ItemMetadata {}

struct Item {
    + ItemUUID identifier
    + ItemType type
    + String staticAssetID
    + String name
    + ItemContent content
    + ItemMetadata metadata
}

Item "1" o-- "1" ItemUUID : contains
Item "1" o-- "1" ItemType : contains
Item "1" o-- "1" ItemContent : contains
Item "1" o-- "1" ItemMetadata : contains

class RealItem extends Item {}
class VirtItem extends Item {}

struct Mileage {
    + UserUUID identifier
    + i64 mileage
}

Mileage -- User : < owns

' Mileage SubSystem

enum MileageChangeOperationType {
    Add
    Sub
    Set
}

class MileageChangeOperationDesc {}

struct MileageChangeLog {
    + DateTime invoked
    + UserUUID issuer
    + UserUUID target
    + MileageChangeOperationType type
    + MileageChangeOperationDesc descStreo
    + String descManual
}

MileageChangeLog "1" o-- UserUUID : contains
MileageChangeLog "1" o-- "1" MileageChangeOperationType : contains
MileageChangeLog "1" o-- "1" MileageChangeOperationDesc : contains

class MileageManager implements Manager {
    + {static} Mileage GetUserMileage()
    + {static} void ChangeMileage()
}

MileageManager --- User : use
MileageManager --- Mileage : use
MileageManager --- MileageChangeLogManager : use
MileageManager --- MileageStorageController : use

class MileageChangeLogManager {
    + MileageChangeLog GetMileageChangeLog()
}

MileageChangeLogManager --- MileageChangeLogStorageController : use

class MileageChangeLogStorageController<T> implements StorageController {}
MileageChangeLogStorageController --- MileageChangeLog : use

class MileageStorageController<T> implements StorageController{}
MileageStorageController --- Mileage : use

class MileageSubSystem {
    + {static} MileageManager mileageManager
    + {static} MileageStorageController mileageStorageController
}

MileageSubSystem "1" o-- "1" MileageManager : contains
MileageSubSystem "1" o-- "1" MileageStorageController : contains

' MileageShop SubSystem
struct MileageShopItem {
    + MileageShopItemUUID identifier
    + Item item
}

MileageShopItem "1" o-- "1" MileageShopItemUUID : contains
MileageShopItem "1" o-- "1" Item : contains

class MileageShopManager implements Manager {
    + void Buy()
}

class MileageShopManagementManager implements Manager {
    + void Add(Item item)
    + void Update(MileageShopItemUUID identifier, Item item)
    + void Remove(MileageShopItemUUID identifier)
}

MileageShopManagementManager --- Item : use
MileageShopManagementManager --- MileageShopItemUUID : use

class MileageShopStorageController<T> implements StorageController {}
MileageShopStorageController --- MileageShopItem : use

class MileageShopSubSystem {
    + {static} MileageShopManagementManager mileageshopManagement
    + {static} MileageShopeManager mileageShopManager
    + {static} MileageShopStorageController mileageShopStorageController
}
MileageShopSubSystem "1" o-- "1" MileageShopManagementManager : contains
MileageShopSubSystem "1" o-- "1" MileageShopManager : contains
MileageShopSubSystem "1" o-- "1" MileageShopStorageController : contains
@enduml
