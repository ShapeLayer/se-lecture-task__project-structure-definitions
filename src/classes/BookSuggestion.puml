@startuml
Interface Manager
Interface StorageController<T> {
    + T Query()
    + void Add()
    + void Remove()
    + void Update()
}

class EmotionChecklist {
    + Dictionary<K, bool> checkList
    + String toPrompt()
}

enum BookSuggestionManualRequestType {
    Normal
    NewCategory
    EmotionBased
}
struct BookSuggestionManualRequest {
    + BookSuggestionManualRequestType type
    + String prompt
}
BookSuggestionManualRequest "1" o-- "1" BookSuggestionManualRequestType : contains
EmotionChecklist --o BookSuggestionManualRequest : use

struct BookSuggestion {}
class BookSuggestionTask {}

class BookSuggestionWorker {
    - BookSuggestionTask task
    - void run()
}
BookSuggestionWorker --- BookSuggestion : use

class BookSuggestionScheduler {
    + BookSuggestionWorker worker
    - void invoke()
}

BookSuggestionScheduler "1" o-- "1" BookSuggestionWorker : contains

class BookSuggestionManager implements Manager {
    + {static} void InvokeBookSuggestionManual(BookSuggestionManualRequest req)
    + {static} void PushBookSuggestionRequestQueue()
}
BookSuggestionManager --- BookSuggestionManualRequest : use
BookSuggestionManager --- BookSuggestionScheduler : use
BookSuggestionManager --- BookSuggestionStorageController : use

class BookSuggestionStorageController<T> implements StorageController {}
BookSuggestionStorageController --- BookSuggestion : use

class BookSuggestionSubSystem {
    + {static} BookSuggestionManager bookSuggestionManager
    + {static} BookSuggestionStorageController bookSuggestionStorageController
    + {static} List<BookSuggestionScheduler> bookSuggestionSchedulers
}

BookSuggestionSubSystem "1" o-- "1" BookSuggestionManager : contains
BookSuggestionSubSystem "1" o-- "1" BookSuggestionStorageController : contains
BookSuggestionSubSystem "1" o-- "N" BookSuggestionScheduler : contains

@enduml
